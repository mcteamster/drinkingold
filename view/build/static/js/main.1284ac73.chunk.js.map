{"version":3,"sources":["components/Player.js","components/Landing.js","components/Card.js","components/Bonuses.js","components/Backwards.js","components/Hazards.js","components/Forwards.js","components/Timer.js","components/Buttons.js","components/Endgame.js","App.js","index.js"],"names":["Player","props","score","turn","info","active","percent","totalScore","width","color","parseInt","sessionStorage","getItem","id","style","minWidth","borderRadius","backgroundColor","colour","backgroundImage","nameStyle","className","name","Landing","playerList","players","sort","a","b","map","player","lobbyMessage","room","type","placeholder","maxLength","min","max","Title","text","FlavourText","Card","meta","round","data","symbol","title","description","Bonuses","bonusList","bonus","class","value","Backwards","bonuses","Hazards","hazardList","hazard","Turn","Forwards","historyList","history","hazards","Timer","state","tunrntime","time","turntime","setInterval","t","glass","document","querySelector","fullness","cardType","hazardMax","Math","h","setState","React","Component","Yeah","Nah","Endgame","App","phase","card","this","ws","WebSocket","onopen","join","addEventListener","sendMsg","display","innerText","border","hazardEnd","filter","length","yes","classList","add","setTimeout","remove","no","e","preventDefault","stopPropagation","toggle","visibility","onmessage","msg","JSON","parse","querySelectorAll","forEach","setItem","secret","console","error","Date","code","playerID","clientSecret","p","find","x","err","roomInput","getElementById","roomID","floor","send","stringify","cardData","ReactDOM","render","StrictMode"],"mappings":"+pKAgCeA,MA9Bf,SAAgBC,GACd,IAAIC,EAAQD,EAAMC,MACdC,EAAI,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOE,MACO,IAAtBF,EAAMG,KAAKC,QAAmBJ,EAAMG,KAAKC,SAAWF,IACrDD,EAAQ,GAEV,IAAII,EAAeL,EAAMG,KAAKG,YAAYN,EAAMG,KAAKG,WAAaL,GAApD,IACVM,EAAQ,IAAKP,EAAMG,KAAKG,WAAaL,GACrCO,EAASC,SAASC,eAAeC,QAAQ,eAAiBF,SAAST,EAAMG,KAAKS,IAAO,cAAgB,gBAErGC,EAAQ,CACVN,MAAM,GAAD,OAAKA,EAAL,MACLO,SAAU,QACVC,aAAc,sCACdC,gBAAiBhB,EAAMG,KAAKc,OAC5BC,gBAAgB,0BAAD,OAA4BlB,EAAMG,KAAKc,OAAvC,aAAkDZ,EAAlD,cAA+DL,EAAMG,KAAKc,OAA1E,aAAqFZ,EAArF,+BAGbc,EAAY,CACdX,MAAOA,GAGT,OACE,sBAAKY,UAAU,SAAf,UACE,qBAAKA,UAAU,yBAAyBP,MAAOA,EAA/C,SAAuDb,EAAMG,KAAKG,WAAWL,IAC7E,qBAAKY,MAAOM,EAAZ,SAAwBnB,EAAMG,KAAKkB,WCW1BC,MAnCf,SAAiBtB,GACb,IACMuB,EADUvB,EAAMwB,QAAQC,MAAK,SAACC,EAAEC,GAAH,OAAQD,EAAEd,GAAKe,EAAEf,MACzBgB,KAAI,SAACC,GAAD,OACV,IAAlBA,EAAOzB,QACP,6BACC,cAAC,EAAD,CAAQD,KAAM0B,EAAQ5B,MAAO,KADrB4B,EAAOjB,OAKfkB,EAAgB9B,EAAM+B,KAAP,uBAAqB/B,EAAM+B,MAAS,GAEvD,OACE,sBAAKX,UAAU,gBAAf,UACE,+CACA,sBAAKR,GAAG,eAAR,kGACmE,uBADnE,+EAEgD,uBAFhD,qFAGsD,uBAHtD,4FAMA,oBAAIQ,UAAU,aAAd,SACKG,IAEL,qBAAKH,UAAU,SAASR,GAAG,eAA3B,SAA2CkB,IAC3C,uBAAOlB,GAAG,YAAYoB,KAAK,OAAOC,YAAY,oBAAUC,UAAU,OAClE,uBAAOtB,GAAG,YAAYQ,UAAU,SAASY,KAAK,SAASC,YAAY,oBAAUE,IAAI,OAAOC,IAAI,SAC5F,sBAAKxB,GAAG,aAAaQ,UAAU,WAA/B,UACE,qBAAKR,GAAG,WAAWQ,UAAU,cAA7B,kBACA,qBAAKR,GAAG,YAAYQ,UAAU,cAA9B,oBACA,qBAAKR,GAAG,YAAYQ,UAAU,qBAA9B,0B,MCfV,SAASiB,EAAMrC,GACX,OACI,qBAAKoB,UAAU,iBAAf,SACKpB,EAAMsC,OAKnB,SAASC,EAAYvC,GACjB,OACI,qBAAKoB,UAAU,uBAAf,SACI,4BACKpB,EAAMsC,SAMRE,MAjCf,SAAcxC,GACV,OACI,sBAAKoB,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAkBR,GAAG,QAApC,UACI,mDAAcZ,EAAMyC,KAAKC,MAAzB,WACA,mDAAc1C,EAAMyC,KAAKV,WAE7B,qBAAKnB,GAAG,QAAQQ,UAAU,WAA1B,SAAsCpB,EAAM2C,KAAKC,SACjD,cAACP,EAAD,CAAOC,KAAMtC,EAAM2C,KAAKE,QACxB,sBAAKzB,UAAU,WAAWR,GAAG,QAA7B,UAAqC,uBAAMQ,UAAU,SAAhB,UAA0BpB,EAAMyC,KAAKxC,MAArC,sBAArC,iBACA,cAACsC,EAAD,CAAaD,KAAMtC,EAAM2C,KAAKG,kB,YCW3BC,MArBf,SAAiB/C,GACf,IAAMgD,EAAYhD,EAAMG,KAAKyB,KAAI,SAACqB,GAAD,OACb,IAAjBA,EAAM7C,QACN,+BACC,qBAAKgB,UAAU,cAAf,SACG6B,EAAML,SAET,qBAAKxB,UAAU,oBAAf,SACoB,OAAhB6B,EAAMC,MAAP,UAA4BD,EAAME,OAAlC,WAAgDF,EAAME,WALjDF,EAAMrC,OAUlB,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,MAAd,8CACC4B,MCSQI,MAvBf,SAAmBpD,GACjB,IAKMuB,EALUvB,EAAMwB,QAAQC,MAAK,SAACC,EAAEC,GAAH,OAAQD,EAAEL,KAAOM,EAAEN,QAAMI,MAAK,SAACC,EAAEC,GAGlE,OAFaD,EAAEpB,aAA0B,IAAboB,EAAEtB,QAAoBsB,EAAEtB,SAAWJ,EAAMyC,KAAKvC,KAAQ,EAAIF,EAAMyC,KAAKxC,OACpF0B,EAAErB,aAA0B,IAAbqB,EAAEvB,QAAoBuB,EAAEvB,SAAWJ,EAAMyC,KAAKvC,KAAQ,EAAIF,EAAMyC,KAAKxC,UAGxE2B,KAAI,SAACC,GAAD,OAC5B,oBAAoBT,WAA8B,IAAlBS,EAAOzB,QAAmByB,EAAOzB,SAAWJ,EAAMyC,KAAKvC,KAAQ,GAAK,OAApG,SACC,cAAC,EAAD,CAAQC,KAAM0B,EAAQ5B,MAAOD,EAAMyC,KAAKxC,MAAOC,KAAMF,EAAMyC,KAAKvC,QADxD2B,EAAOjB,OAKnB,OACE,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAf,0BACA,oBAAIA,UAAU,aAAaR,GAAG,aAA9B,SACGW,IAEH,cAAC,EAAD,CAASpB,KAAMH,EAAMqD,c,YCLZC,MAff,SAAiBtD,GACf,IAAMuD,EAAavD,EAAMG,KAAKyB,KAAI,SAAC4B,GAAD,OAC/B,oBAAoBpC,UAA8B,IAAlBoC,EAAOpD,OAAgB,oBAAsB,eAA7E,SACEoD,EAAOZ,QADAY,EAAO5C,OAKnB,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,MAAd,yDACCmC,MCSP,SAASE,EAAKzD,GACZ,OACE,sBAAKoB,UAAU,OAAf,UACGpB,EAAM2C,KAAKC,OADd,OAC4B5C,EAAM2C,KAAKG,eAK5BY,MA1Bf,SAAkB1D,GAChB,IAAM2D,EAAc3D,EAAM4D,QAAQhC,KAAI,SAAC1B,GAAD,OACnC,6BACC,cAACuD,EAAD,CAAMd,KAAMzC,EAAMuC,KAAMzC,EAAMyC,QAD/B,UAAYvC,EAAKU,QAKnB,OACC,sBAAKQ,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,0BACA,oBAAIA,UAAU,cAAd,SACGuC,IAEH,cAAC,EAAD,CAASxD,KAAMH,EAAM6D,c,OC4CZC,G,wDAxDb,WAAY9D,GAAO,IAAD,8BAChB,cAAMA,IACD+D,MAAQ,CACXC,UAAW,EAAKhE,MAAMgE,UAAY,IAClCC,KAAM,EAAKC,UAJG,E,qDAQlB,WAAqB,IAAD,OAClBC,aAAY,WACV,IAAIC,EACAC,EAAQC,SAASC,cAAc,SACnC,GAAG,EAAKL,WAAa,EAAKlE,MAAMkE,SAAW,IAAK,CAC9C,IAAIM,EAAW,IAAI,EAAKT,MAAME,KAAK,EAAKC,SAAW,GACnDG,EAAMxD,MAAMK,gBAAZ,gCAAuD,EAAKV,MAA5D,aAAsEgE,EAAS,EAA/E,cAAsF,EAAKhE,MAA3F,aAAqGgE,EAAS,EAA9G,aAEEJ,EADC,EAAKL,MAAME,KAAO,GACf,EAAKF,MAAME,KAAO,GAElB,OAGNG,EAAI,EAAKpE,MAAMkE,SAAW,IAC1B,EAAKA,SAAWE,EACW,WAAxB,EAAKpE,MAAMyE,UACZ,EAAKC,UAAYC,KAAKvC,IAAL,MAAAuC,KAAI,YAAS,EAAK3E,MAAM6D,QAAQjC,KAAI,SAAAgD,GAAC,OAAIA,EAAExE,YACzD,EAAKsE,WAAa,EACnB,EAAKlE,MAAQ,MAEb,EAAKA,MAAQ,QAEiB,UAAxB,EAAKR,MAAMyE,SACnB,EAAKjE,MAAQ,SAEb,EAAKA,MAAQ,YAGjB,EAAKqE,SAAS,CAACZ,KAAMG,MACpB,M,oBAUL,WAEE,OAEE,aADA,CACA,c,GApDcU,IAAMC,Y,MCD1B,SAASC,IACP,OACE,qBAAK5D,UAAU,0BAA0BR,GAAG,MAA5C,SACE,sCAAQ,uBAAR,oBAKN,SAASqE,IACP,OACE,qBAAK7D,UAAU,yBAAyBR,GAAG,KAA3C,SACE,qCAAO,uBAAP,oB,MCUSsE,MApBf,SAAiBlF,GACb,IACMuB,EADUvB,EAAMwB,QAAQC,MAAK,SAACC,EAAEC,GAAH,OAAQD,EAAEL,KAAOM,EAAEN,QAAMI,MAAK,SAACC,EAAEC,GAAH,OAAQD,EAAEpB,WAAaqB,EAAErB,cAC/DsB,KAAI,SAACC,GAAD,OACV,IAAlBA,EAAOzB,QACP,6BACC,cAAC,EAAD,CAAQD,KAAM0B,EAAQ5B,MAAO,EAAGC,KAAM,KAD9B2B,EAAOjB,OAKnB,OACE,sBAAKQ,UAAU,kBAAf,UACE,8CACA,qBAAKA,UAAU,OAAf,0BACA,oBAAIA,UAAU,aAAd,SACKG,Q,OC4NE4D,E,kDA5Nb,WAAYnF,GAAQ,IAAD,8BACjB,cAAMA,IACD+D,MAAQ,CACXtB,KAAM,CACJV,KAAM,OACNW,MAAO,EACPxC,KAAM,EACNkF,MAAO,QACPC,KAAM,EACNpF,MAAO,EACPiE,SAAU,KAEZN,QAAS,GACTpC,QAAS,GACTqC,QAAS,CACP,CAAE,GAAM,EAAG,MAAS,IAAK,OAAU,eAAM,OAAU,GACnD,CAAE,GAAM,EAAG,MAAS,IAAK,OAAU,eAAM,OAAU,GACnD,CAAE,GAAM,EAAG,MAAS,IAAK,OAAU,eAAM,OAAU,GACnD,CAAE,GAAM,EAAG,MAAS,IAAK,OAAU,eAAM,OAAU,GACnD,CAAE,GAAM,EAAG,MAAS,IAAK,OAAU,eAAM,OAAU,IAErDR,QAAS,CACP,CAAE,GAAM,EAAG,OAAU,eAAM,QAAU,EAAM,MAAS,KAtBvC,E,qDA2BnB,WAAqB,IAAD,OAElBiC,KAAKC,GAAK,IAAIC,UAAU,mCAIxBF,KAAKC,GAAGE,OAAS,WAEf,IAAIC,EAAOpB,SAASC,cAAc,aAClCmB,EAAKC,iBAAiB,SAAS,WAC7B,IAAI5D,EAAOuC,SAASC,cAAc,cAC9BlD,EAAOiD,SAASC,cAAc,cAChB,KAAfxC,EAAKoB,MACN,EAAKyC,QAAQ,SACW,KAAfvE,EAAK8B,OACdpB,EAAKlB,MAAMgF,QAAU,QACrBxE,EAAKR,MAAMgF,QAAU,OACrBvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDH,EAAKI,UAAY,SAEjBzE,EAAKR,MAAMkF,OAAS,sBAKZzB,SAASC,cAAc,cAC7BoB,iBAAiB,SAAS,WAC9B,IAAItE,EAAOiD,SAASC,cAAc,cACf,KAAflD,EAAK8B,MACP,EAAKyC,QAAQ,SAEbvE,EAAKR,MAAMkF,OAAS,sBAKxBzB,SAASC,cAAc,cAAcoB,iBAAiB,SAAS,WAC7D,EAAKC,QAAQ,YAIftB,SAASC,cAAc,QAAQoB,iBAAiB,SAAS,WACvD,IAAIK,EAAY,EAAKjC,MAAMF,QAAQjC,KAAI,SAAAgD,GAAC,OAAIA,EAAExE,UAAQ6F,QAAO,SAAC7F,GAAD,OAAYA,GAAU,KAAG8F,OACtF,GAA4B,IAAzB,EAAKnC,MAAMtB,KAAK4C,MAA4B,IAAdW,EAAgB,CAC/C,EAAKJ,QAAQ,QACb,IAAIO,EAAM7B,SAASC,cAAc,QACjC4B,EAAIC,UAAUC,IAAI,WAClBC,YAAW,WACTH,EAAIC,UAAUG,OAAO,aACpB,SAKPjC,SAASC,cAAc,OAAOoB,iBAAiB,SAAS,WACtD,IAAIK,EAAY,EAAKjC,MAAMF,QAAQjC,KAAI,SAAAgD,GAAC,OAAIA,EAAExE,UAAQ6F,QAAO,SAAC7F,GAAD,OAAYA,GAAU,KAAG8F,OACtF,GAA4B,IAAzB,EAAKnC,MAAMtB,KAAK4C,MAA4B,IAAdW,EAAgB,CAC/C,EAAKJ,QAAQ,OACb,IAAIY,EAAKlC,SAASC,cAAc,OAChCiC,EAAGJ,UAAUC,IAAI,WACjBC,YAAW,WACTE,EAAGJ,UAAUG,OAAO,aACnB,SAKPjC,SAASC,cAAc,cAAcoB,iBAAiB,SAAS,SAACc,GAC9DA,EAAEC,iBACFD,EAAEE,kBACFrC,SAASC,cAAc,eAAe6B,UAAUQ,OAAO,gBAIzDtC,SAASC,cAAc,gBAAgBoB,iBAAiB,SAAS,SAACc,GAChEA,EAAEC,iBACFD,EAAEE,kBACF,IAAIhD,EAAcW,SAASC,cAAc,gBACL,WAAjCZ,EAAY9C,MAAMgG,WACnBlD,EAAY9C,MAAMgG,WAAa,UAE/BlD,EAAY9C,MAAMgG,WAAa,aAMrCvB,KAAKC,GAAGuB,UAAY,SAACC,GAAS,IAAD,EAG3B,kBAFAA,EAAMC,KAAKC,MAAMF,EAAIpE,OAEVF,YAAX,aAAO,EAAUT,MACf,IAAK,YACH,EAAK6C,SAASkC,GAGdzC,SAAS4C,iBAAiB,UAAUC,SAAQ,SAAAV,GAAC,OAAIA,EAAE5F,MAAMgG,WAAiC,UAAnBE,EAAItE,KAAK2C,MAAqB,UAAY,YACjHd,SAAS4C,iBAAiB,SAASC,SAAQ,SAAAV,GAAC,OAAIA,EAAE5F,MAAMgG,WAAiC,SAAnBE,EAAItE,KAAK2C,MAAoB,UAAY,YAC/Gd,SAAS4C,iBAAiB,YAAYC,SAAQ,SAAAV,GAAC,OAAIA,EAAE5F,MAAMgG,WAAiC,YAAnBE,EAAItE,KAAK2C,MAAuB,UAAY,YACrH,MACF,IAAK,SACH1E,eAAe0G,QAAQ,WAAYL,EAAInG,IACvCF,eAAe0G,QAAQ,eAAgBL,EAAIM,QAC5B,IAAXN,EAAInG,KACN0D,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,SAEvDvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDvB,SAASC,cAAc,aAAa1D,MAAMgF,QAAU,OACpD,MACF,IAAK,SACHvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDvB,SAASC,cAAc,cAAc1D,MAAMgF,QAAU,OACrDvB,SAASC,cAAc,aAAa1D,MAAMgF,QAAU,OACpD,MACF,IAAK,QACHyB,QAAQC,MAAM,IAAIC,KAAST,EAAItE,KAAKE,MACf,gBAAlBoE,EAAItE,KAAKgF,OACVnD,SAASC,cAAc,cAAc1D,MAAMkF,OAAS,wB,qBAU9D,SAAQ/D,GACN,IAAI+E,EAAM,CACRW,SAAUhH,eAAeC,QAAQ,YACjCgH,aAAcjH,eAAeC,QAAQ,iBAGvC,GAA8B,SAA1B2E,KAAKvB,MAAMtB,KAAK2C,MAAkB,CAEpC,GAAa,SAATpD,EACF,IACE,IAAI4F,EAAItC,KAAKvB,MAAMvC,QAAQqG,MAAK,SAACC,GAAD,OAAOA,EAAElH,KAAOH,SAASC,eAAeC,QAAQ,iBAC/D,IAAbiH,EAAExH,QAAmBwH,EAAExH,SAAWkF,KAAKvB,MAAMtB,KAAKvC,OACpD0H,EAAExH,QAAS,GAEb2G,EAAIpE,MAAO,EACX,MAAOoF,GACPT,QAAQC,MAAM,4BAEX,GAAa,QAATvF,EACT,IACE,IAAI4F,EAAItC,KAAKvB,MAAMvC,QAAQqG,MAAK,SAACC,GAAD,OAAOA,EAAElH,KAAOH,SAASC,eAAeC,QAAQ,iBAC/D,IAAbiH,EAAExH,QAAmBwH,EAAExH,SAAWkF,KAAKvB,MAAMtB,KAAKvC,OACpD0H,EAAExH,OAASkF,KAAKvB,MAAMtB,KAAKvC,MAE7B6G,EAAIpE,MAAO,EACX,MAAOoF,GACPT,QAAQC,MAAM,uBAGlBjC,KAAKT,SAASS,KAAKvB,YACd,GAA8B,UAA1BuB,KAAKvB,MAAMtB,KAAK2C,MAEzB,GAAa,UAATpD,EAAkB,CACpB,IAAIgG,EAAY1D,SAAS2D,eAAe,aAAa9E,MAClD6E,EAAY,KAASA,EAAY,IAClCjB,EAAImB,OAASvD,KAAKwD,MAAMH,IAE1BjB,EAAIpE,KAAO2B,SAAS2D,eAAe,aAAa9E,UAC9B,UAATnB,IACT+E,EAAIpE,KAAO,SAIf2C,KAAKC,GAAG6C,KAAKpB,KAAKqB,UAAUtB,M,oBAG9B,WACE,OACE,sBAAK3F,UAAU,MAAf,UACE,cAAC,EAAD,CAASI,QAAS8D,KAAKvB,MAAMvC,QAASO,KAAMuD,KAAKvB,MAAMtB,KAAKV,OAC5D,cAAC,EAAD,CAAWP,QAAS8D,KAAKvB,MAAMvC,QAAS6B,QAASiC,KAAKvB,MAAMV,QAASZ,KAAM6C,KAAKvB,MAAMtB,OACtF,cAAC,EAAD,CAAME,KAAM2F,EAAShD,KAAKvB,MAAMtB,KAAK4C,MAAO5C,KAAM6C,KAAKvB,MAAMtB,OAC7D,cAAC,EAAD,CAAUmB,QAAS0B,KAAKvB,MAAMH,QAASC,QAASyB,KAAKvB,MAAMF,QAASpB,KAAM6C,KAAKvB,MAAMtB,OACrF,cAAC,EAAD,CAAOyB,SAAUoB,KAAKvB,MAAMtB,KAAKyB,SAAUL,QAASyB,KAAKvB,MAAMF,QAASY,SAAU6D,EAAShD,KAAKvB,MAAMtB,KAAK4C,MAAMrD,OACjH,cAACgD,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,CAASzD,QAAS8D,KAAKvB,MAAMvC,UAC7B,qBAAKZ,GAAG,gBACR,qBAAKA,GAAG,qB,GAvNEkE,IAAMC,WCVxBwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAAS2D,eAAe,W","file":"static/js/main.1284ac73.chunk.js","sourcesContent":["import './styles/Player.css';\n\nfunction Player(props) {\n  let score = props.score;\n  let turn = props?.turn;\n  if(props.info.active !== true && props.info.active !== turn) {\n    score = 0;\n  }\n  let percent = 100*(props.info.totalScore/(props.info.totalScore + score));\n  let width = 0.1*(props.info.totalScore + score);\n  let color = (parseInt(sessionStorage.getItem(\"playerID\")) === parseInt(props.info.id)) ? \"forestgreen\" : \"darkslateblue\";\n\n  let style = {\n    width: `${width}em`,\n    minWidth: \"1.5em\",\n    borderRadius: \"25vw 2vw 25vw 2vw/2vw 25vw 2vw 25vw\",\n    backgroundColor: props.info.colour,\n    backgroundImage: `linear-gradient(90deg, ${props.info.colour}, ${percent}%, ${props.info.colour}, ${percent}%, rgba(255,255,255,0.66))` \n  }\n\n  let nameStyle = {\n    color: color\n  }\n\n  return (\n    <div className=\"Player\">\n      <div className=\"meeple centered number\" style={style}>{props.info.totalScore+score}</div>\n      <div style={nameStyle}>{props.info.name}</div>\n    </div>\n  );\n}\n\nexport default Player;","import './styles/Landing.css';\nimport Player from './Player.js';\n\nfunction Landing(props) {\n    const players = props.players.sort((a,b)=> a.id > b.id) // Sort by ID in the lobby\n    const playerList = players.map((player)=>\n      (player.active === true) &&\n      (<li key={player.id}>\n        <Player info={player} score={0}/>\n      </li>)\n    );\n\n    let lobbyMessage = (props.room) ? `🔑 ${props.room}` : \"\"\n\n    return (\n      <div className=\"Landing setup\">\n        <h1>Drinkin' Gold</h1>\n        <div id=\"instructions\">\n          🎉 Get ready for 5 ripper nights out! Who will drink the most 🍻?<br></br>\n          👍 Tap right ➡️ to keep going and drink more🍺<br></br>\n          👎 Tap left ⬅️ to go home and pickup some goodies 🍕<br></br>\n          ⚠️ Look out for hazards - struck twice and your night is ruined 🤮\n        </div>\n        <ul className=\"playerList\">\n            {playerList}\n        </ul>\n        <div className=\"number\" id=\"lobbyMessage\">{lobbyMessage}</div>\n        <input id=\"nameInput\" type=\"text\" placeholder=\"Name 👋\" maxLength=\"12\"></input>\n        <input id=\"roomInput\" className=\"hidden\" type=\"number\" placeholder=\"Room 🔑\" min=\"1000\" max=\"9999\"></input>\n        <div id=\"buttonTray\" className=\"centered\">\n          <div id=\"joinGame\" className=\"lobbyButton\">Join</div>\n          <div id=\"enterGame\" className=\"lobbyButton\">Create</div>\n          <div id=\"startGame\" className=\"lobbyButton hidden\">START</div>\n        </div>\n      </div>\n    );\n}\n\nexport default Landing;","import './styles/Card.css';\n\nfunction Card(props) {\n    return (\n        <div className=\"Card play\">\n            <div className=\"number centered\" id=\"stats\">\n                <div>🌙&nbsp;{props.meta.round} of 5</div>\n                <div>🔑&nbsp;{props.meta.room}</div>\n            </div>\n            <div id=\"image\" className=\"centered\">{props.data.symbol}</div>\n            <Title text={props.data.title} />\n            <div className=\"centered\" id=\"score\"><span className=\"number\">{props.meta.score}&nbsp;🍻</span>&nbsp;tonight</div>\n            <FlavourText text={props.data.description} />\n        </div>\n    );\n}\n\nfunction Title(props) {\n    return (\n        <div className=\"Title centered\">\n            {props.text}\n        </div>\n    )\n}\n\nfunction FlavourText(props) {\n    return (\n        <div className=\"FlavourText centered\">\n            <p>\n                {props.text}\n            </p>\n        </div>\n    );\n}\n\nexport default Card;","import './styles/Bonuses.css';\n\nfunction Bonuses(props) {\n  const bonusList = props.info.map((bonus)=>\n    (bonus.active === true) && \n    (<li key={bonus.id}>\n      <div className=\"bonusSymbol\">\n        {bonus.symbol}\n      </div>\n      <div className=\"bonusValue number\">\n        {(bonus.class === \"B0\") ? `${bonus.value}` : `+${bonus.value}`}\n      </div>\n    </li>)\n  );\n\n  return (\n    <div className=\"Bonuses\">\n      <li className=\"tip\">Bail to claim these for yourself</li>\n      {bonusList}\n    </div>\n  );\n}\n\nexport default Bonuses;","import './styles/Backwards.css';\nimport Player from './Player.js';\nimport Bonuses from './Bonuses.js';\n\nfunction Backwards(props) {\n  const players = props.players.sort((a,b)=> a.name > b.name).sort((a,b)=> {\n    let score1 = a.totalScore+((a.active !== true && (a.active !== props.meta.turn) ? 0 : props.meta.score));\n    let score2 = b.totalScore+((b.active !== true && (b.active !== props.meta.turn) ? 0 : props.meta.score));\n    return score1 < score2\n  }); // Sort By Score, Tiebreak Alphabetically\n  const playerList = players.map((player)=>\n    (<li key={player.id} className={(player.active === true || player.active === props.meta.turn) ? '' : 'grey'}>\n      <Player info={player} score={props.meta.score} turn={props.meta.turn} />\n    </li>)\n  );\n\n  return (\n    <div className=\"Backwards play\">\n      <div className=\"head\">🏅</div>\n      <ul className=\"playerList\" id=\"scoreboard\">\n        {playerList}\n      </ul>\n      <Bonuses info={props.bonuses}/>\n    </div>\n  );\n}\n\nexport default Backwards;","import './styles/Hazards.css';\n\nfunction Hazards(props) {\n  const hazardList = props.info.map((hazard)=>\n    (<li key={hazard.id} className={(hazard.active === 0) ? \"grey hazardSymbol\" : \"hazardSymbol\"}>\n      {hazard.symbol}\n    </li>)\n  );\n\n  return (\n    <div className=\"Hazards\">\n      <li className=\"tip\">Beware! Two encounters will ruin your night</li>\n      {hazardList}\n    </div>\n  );\n}\n\nexport default Hazards;","import './styles/Forwards.css';\nimport Hazards from './Hazards.js';\n\nfunction Forwards(props) {\n  const historyList = props.history.map((turn)=>\n    (<li key={`${turn.id}`}>\n      <Turn data={turn} meta={props.meta} />\n    </li>)\n  );\n\n   return (\n    <div className=\"Forwards play\">\n      <div className=\"head\">🕑</div>\n      <ul className=\"historyList\">\n        {historyList}\n      </ul>\n      <Hazards info={props.hazards} />\n    </div>\n  );\n}\n\nfunction Turn(props) {\n  return (\n    <div className=\"Turn\">\n      {props.data.symbol}&nbsp;{props.data.description}\n    </div>\n  );\n}\n\nexport default Forwards;","import React from 'react';\nimport './styles/Timer.css';\n\nclass Timer extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      tunrntime: this.props.tunrntime - 1000, // One Second Buffer\n      time: this.turntime\n    }\n  }\n\n  componentDidMount() {\n    setInterval(()=>{\n      let t;\n      let glass = document.querySelector(\".Card\");\n      if(this.turntime === this.props.turntime - 1000){\n        let fullness = 100*this.state.time/this.turntime - 10;\n        glass.style.backgroundImage = `linear-gradient(0deg, ${this.color}, ${fullness-1}%, ${this.color}, ${fullness-1}%, beige)`;\n        if(this.state.time > 30){\n          t = this.state.time - 30;\n        } else {\n          t = 0;\n        }\n      } else {\n        t = this.props.turntime - 1000;\n        this.turntime = t;\n        if(this.props.cardType === \"hazard\") {\n          this.hazardMax = Math.max(...(this.props.hazards.map(h => h.active)));\n          if(this.hazardMax >= 2){\n            this.color = \"red\";\n          } else {\n            this.color = \"aqua\";\n          }\n        } else if(this.props.cardType === \"bonus\") {\n          this.color = \"yellow\"\n        } else {\n          this.color = \"goldenrod\"\n        }\n      }\n      this.setState({time: t});\n    }, 30)\n  }\n\n  /*\n  formatTime() {\n    let clock = this.state.time;\n    return `⏰ ${Math.floor(clock/1000)}.${Math.floor((clock%1000)/100)}`;\n  }\n  */\n\n  render(){\n    //let clock = this.formatTime();\n    return(\n      //<div className=\"Timer play\">{clock}</div>\n      <div></div>\n    )\n  }\n}\n\nexport default Timer;","import './styles/Buttons.css';\n\nfunction Yeah() {\n  return (\n    <div className=\"Yeah centered invisible\" id=\"yes\">\n      <b>YEAH!<br></br>👍</b>\n    </div>\n  );\n}\n\nfunction Nah() {\n  return (\n    <div className=\"Nah centered invisible\" id=\"no\">\n      <b>nah.<br></br>👎</b>\n    </div>\n  );\n}\n\nexport { Yeah, Nah };","import './styles/Endgame.css';\nimport Player from './Player.js';\n\nfunction Endgame(props) {\n    const players = props.players.sort((a,b)=> a.name > b.name).sort((a,b)=> a.totalScore < b.totalScore); // Sort By Score, Tiebreak Alphabetically\n    const playerList = players.map((player)=>\n      (player.active === true) &&\n      (<li key={player.id}>\n        <Player info={player} score={0} turn={0}/>\n      </li>)\n    );\n\n    return (\n      <div className=\"Endgame endgame\">\n        <h1>Final Scores</h1>\n        <div className=\"head\">🏅</div>\n        <ul className=\"playerList\">\n            {playerList}\n        </ul>\n      </div>\n    );\n}\n\nexport default Endgame;","// Styles\nimport './App.css';\n\n// React Components\nimport React from 'react';\nimport Landing from './components/Landing';\nimport Card from './components/Card';\nimport Backwards from './components/Backwards';\nimport Forwards from './components/Forwards';\nimport Timer from \"./components/Timer\";\nimport { Yeah, Nah } from './components/Buttons';\nimport Endgame from './components/Endgame';\n\n// Card Data\nimport cardData from './data/cardData.json';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meta: {\n        room: \"0000\",\n        round: 0,\n        turn: 0,\n        phase: \"setup\",\n        card: 0,\n        score: 0,\n        turntime: 20000\n      },\n      history: [],\n      players: [],\n      hazards: [\n        { \"id\": 1, \"class\": \"A\", \"symbol\": \"🚨\", \"active\": 0 },\n        { \"id\": 2, \"class\": \"B\", \"symbol\": \"🤮\", \"active\": 0 },\n        { \"id\": 3, \"class\": \"C\", \"symbol\": \"☣️\", \"active\": 0 },\n        { \"id\": 4, \"class\": \"D\", \"symbol\": \"🥾\", \"active\": 0 },\n        { \"id\": 5, \"class\": \"E\", \"symbol\": \"💔\", \"active\": 0 }\n      ],\n      bonuses: [\n        { \"id\": 0, \"symbol\": \"🥤\", \"active\": true, \"value\": 0 }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    // Websocket Connection\n    this.ws = new WebSocket('ws://drinkingold.mcteamster.com'); // Prod\n    //this.ws = new WebSocket('ws://10.0.0.2'); // Dev\n\n    // Bind Listeners to Buttons\n    this.ws.onopen = () => {\n      // Join\n      let join = document.querySelector('#joinGame');\n      join.addEventListener('click', () => {\n        let room = document.querySelector(\"#roomInput\");\n        let name = document.querySelector(\"#nameInput\");\n        if(room.value !== '') {\n          this.sendMsg(\"enter\");\n        } else if (name.value !== '') {\n          room.style.display = \"block\";\n          name.style.display = \"none\";\n          document.querySelector(\"#enterGame\").style.display = \"none\";\n          join.innerText = \"Enter\";\n        } else {\n          name.style.border = '0.25em solid red';\n        }\n      });\n\n      // Enter\n      let enter = document.querySelector('#enterGame');\n      enter.addEventListener('click', () => {\n        let name = document.querySelector(\"#nameInput\");\n        if (name.value !== '') {\n          this.sendMsg(\"enter\");\n        } else {\n          name.style.border = '0.25em solid red';\n        }\n      });\n\n      // Start\n      document.querySelector('#startGame').addEventListener('click', () => {\n        this.sendMsg(\"start\");\n      });\n\n      // YES\n      document.querySelector('#yes').addEventListener('click', () => {\n        let hazardEnd = this.state.hazards.map(h => h.active).filter((active) => active >= 2).length;\n        if(this.state.meta.card !== 0 && hazardEnd === 0){\n          this.sendMsg(\"yeah\");\n          let yes = document.querySelector('#yes')\n          yes.classList.add('visible');\n          setTimeout(()=>{\n            yes.classList.remove('visible');\n          }, 1000);\n        }\n      });\n\n      // NO\n      document.querySelector('#no').addEventListener('click', () => {\n        let hazardEnd = this.state.hazards.map(h => h.active).filter((active) => active >= 2).length;\n        if(this.state.meta.card !== 0 && hazardEnd === 0){\n          this.sendMsg(\"nah\");\n          let no = document.querySelector('#no')\n          no.classList.add('visible');\n          setTimeout(()=>{\n            no.classList.remove('visible');\n          }, 1000);\n        }\n      });\n\n      // Show Scores\n      document.querySelector('#showScore').addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.querySelector('#scoreboard').classList.toggle(\"invisible\");\n      });\n\n      // Show History\n      document.querySelector('#showHistory').addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let historyList = document.querySelector('.historyList');\n        if(historyList.style.visibility === \"hidden\") {\n          historyList.style.visibility = \"visible\";\n        } else {\n          historyList.style.visibility = \"hidden\";\n        };\n      });\n    };\n\n    // Update Game State\n    this.ws.onmessage = (msg) => {\n      msg = JSON.parse(msg.data);\n      //console.dir(msg);\n      switch(msg.meta?.type) {\n        case \"gameState\":\n          this.setState(msg);\n          //if(this.state.meta.card === 0 || this.state.players.filter(p=>(p.active === true)).length === 0) {\n          //}\n          document.querySelectorAll(\".setup\").forEach(e => e.style.visibility = (msg.meta.phase === \"setup\") ? \"visible\" : \"hidden\");\n          document.querySelectorAll(\".play\").forEach(e => e.style.visibility = (msg.meta.phase === \"play\") ? \"visible\" : \"hidden\");\n          document.querySelectorAll(\".endgame\").forEach(e => e.style.visibility = (msg.meta.phase === \"endgame\") ? \"visible\" : \"hidden\");\n          break;\n        case \"secret\":\n          sessionStorage.setItem(\"playerID\", msg.id);\n          sessionStorage.setItem(\"clientSecret\", msg.secret);\n          if (msg.id === 1) {\n            document.querySelector(\"#startGame\").style.display = \"block\";\n          }\n          document.querySelector(\"#roomInput\").style.display = \"none\";\n          document.querySelector(\"#nameInput\").style.display = \"none\";\n          document.querySelector(\"#enterGame\").style.display = \"none\";\n          document.querySelector(\"#joinGame\").style.display = \"none\";\n          break;\n        case \"rejoin\":\n          document.querySelector(\"#roomInput\").style.display = \"none\";\n          document.querySelector(\"#nameInput\").style.display = \"none\";\n          document.querySelector(\"#enterGame\").style.display = \"none\";\n          document.querySelector(\"#joinGame\").style.display = \"none\";\n          break;\n        case \"error\":\n          console.error(new Date() + msg.meta.data);\n          if(msg.meta.code === \"missingRoom\") {\n            document.querySelector(\"#roomInput\").style.border = \"0.25em solid red\";\n          }\n          break;\n        default:\n          break;\n      }\n    };\n  }\n\n  // Send Message\n  sendMsg(type) {\n    let msg = {\n      playerID: sessionStorage.getItem(\"playerID\"),\n      clientSecret: sessionStorage.getItem(\"clientSecret\")\n    };\n\n    if (this.state.meta.phase === \"play\") {\n      // Signal Intent and update local state in advance\n      if (type === \"yeah\") {\n        try {\n          let p = this.state.players.find((x) => x.id === parseInt(sessionStorage.getItem(\"playerID\")))\n          if (p.active === true || p.active === this.state.meta.turn) {\n            p.active = true;\n          };\n          msg.data = true;\n        } catch (err) {\n          console.error(\"Player ID Not Found\")\n        }\n      } else if (type === \"nah\") {\n        try {\n          let p = this.state.players.find((x) => x.id === parseInt(sessionStorage.getItem(\"playerID\")))\n          if (p.active === true || p.active === this.state.meta.turn) {\n            p.active = this.state.meta.turn;\n          };\n          msg.data = false;\n        } catch (err) {\n          console.error(\"Player ID Not Found\")\n        }\n      }\n      this.setState(this.state);\n    } else if (this.state.meta.phase === \"setup\") {\n      // Set Player Name\n      if (type === \"enter\") {\n        let roomInput = document.getElementById(\"roomInput\").value;\n        if(roomInput < 10000 && roomInput > 0){\n          msg.roomID = Math.floor(roomInput);\n        }\n        msg.data = document.getElementById(\"nameInput\").value;\n      } else if (type === \"start\") {\n        msg.data = \"start\";\n      }\n    }\n    // Send\n    this.ws.send(JSON.stringify(msg));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Landing players={this.state.players} room={this.state.meta.room}/>\n        <Backwards players={this.state.players} bonuses={this.state.bonuses} meta={this.state.meta} />\n        <Card data={cardData[this.state.meta.card]} meta={this.state.meta}/>\n        <Forwards history={this.state.history} hazards={this.state.hazards} meta={this.state.meta} />\n        <Timer turntime={this.state.meta.turntime} hazards={this.state.hazards} cardType={cardData[this.state.meta.card].type}/>\n        <Yeah />\n        <Nah />\n        <Endgame players={this.state.players} />\n        <div id='showHistory'></div>\n        <div id='showScore'></div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\n\n// Render UI\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}